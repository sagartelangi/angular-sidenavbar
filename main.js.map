{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\nimport * as userData from './userdata.json';\nimport { Users } from './users';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'sidenavbar-exercise';\n  data: Users = (userData as any).default;\n}","<mat-drawer-container autosize>\n  <mat-drawer #drawer class=\"mat-sidenav\" mode=\"side\">\n    <mat-toolbar (click)=\"drawer.toggle()\" color=\"primary\">\n      <span *ngIf=\"drawer.opened\" class=\"span-text\">Users</span>\n    </mat-toolbar>\n    <mat-selection-list dense #user [multiple]=\"false\">\n      <mat-list-option class=\"list-options\" *ngFor=\"let user of data\" [value]=\"user\">\n        {{user.name}}\n      </mat-list-option>\n    </mat-selection-list>\n  </mat-drawer>\n  <div class=\"mat-sidenav-content\">\n    <mat-toolbar color=\"primary\">\n      <button *ngIf=\"!drawer.opened\" mat-icon-button class=\"mat-icon-button\"\n        aria-label=\"Example icon-button with menu icon\">\n        <mat-icon (click)=\"drawer.toggle()\">menu</mat-icon>\n      </button>\n      <span><img class=\"img-item\" src=\"../assets/signify.png\"></span>\n    </mat-toolbar>\n    <div *ngIf=\"user.selectedOptions.selected[0] && drawer.opened\" class=\"card-container\">\n      <mat-card class=\"mat-card\">\n        <mat-card-header>\n          <div mat-card-avatar class=\"mat-header-image\"></div>\n          <mat-card-title>{{user.selectedOptions.selected[0]?.value.name}}</mat-card-title>\n          <mat-card-subtitle>{{user.selectedOptions.selected[0]?.value.location}}</mat-card-subtitle>\n        </mat-card-header>\n        <img mat-card-image [src]=\"(user.selectedOptions.selected[0])?.value.countryflag\" alt=\"Country flag\">\n        <mat-card-content>\n          <p>\n            {{user.selectedOptions.selected[0]?.value.description}}\n          </p>\n        </mat-card-content>\n      </mat-card>\n    </div>\n  </div>\n</mat-drawer-container>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatListModule } from '@angular/material/list';\nimport { MatCardModule } from '@angular/material/card';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    AppRoutingModule,\n    MatToolbarModule,\n    MatIconModule,\n    MatSidenavModule,\n    MatListModule,\n    MatCardModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}